{"version":3,"sources":["components/fbLogin.js","components/login.js","utils/hashtagHelpers.js","components/hashtags.js","utils/helpers.js","components/dashboard.js","App.js","index.js"],"names":["React","Component","help","str","num","prev","arr","length","join","split","push","shift","likeHashCall","x","hashes","like_count","Promise","res","rej","window","FB","api","id","response","inv_likes","captionArray","String","caption","toMap","Array","from","obj","Hashtags","state","loggedOut","promisesCompleted","dict","data","insta_id","instagram_business_account","photoArray","document","querySelector","innerHTML","then","console","log","resolve","map","i","a","dictCreate","diction","av_likes","reject","hashNumUses","diff","likes","difference","score","hashtags","hashtagScore","newDict","avLikesDictionary","scoreList","y","newScore","list","Object","entries","sort","b","setState","theList","this","Fragment","class","className","checkLoginState","getLoginStatus","App","basename","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad8a2786.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass FbLogin extends React.Component {\r\n  state = {\r\n    redirect: false\r\n  }\r\n\r\n   checkLoginState = () => {\r\n     return new Promise((res, rej) => {\r\n        window.FB.getLoginStatus(function(response) {\r\n            res(response)\r\n        });\r\n      })\r\n    }\r\n  loadFbApi() {\r\n    return new Promise((res, rej) => {\r\n      if (!window.FB) { \r\n          (function(d, s, id) {\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) return;\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = \"//connect.facebook.net/en_US/sdk.js\";\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n          }(document, 'script', 'facebook-jssdk'));\r\n          window.fbAsyncInit = function() {\r\n              let FB_APP_ID = 1796391010517069;\r\n              window.FB.init({\r\n                  appId      : FB_APP_ID,\r\n                  cookie     : true, \r\n                  // the session\r\n                  xfbml      : true, \r\n                  version    : 'v9.0' \r\n              })\r\n              window.FB.AppEvents.logPageView();\r\n              console.log('fired')\r\n              res()\r\n        } \r\n      } else {\r\n          res()\r\n      }\r\n      })\r\n    }\r\n    login = () => {\r\n      return new Promise((resolve2, rej) => {\r\n        window.FB.login(function(res) {\r\n          console.log('logged in', res.authResponse.accessToken)\r\n          let access = res.authResponse.accessToken;\r\n          resolve2(access)\r\n        })\r\n      })\r\n    }\r\n    statusChange = (response) => {\r\n      return new Promise(async (resolve, rej) => {\r\n        if (response.status === 'unknown'||response.status === 'not_authorized') {  \r\n            this.login()\r\n            .then(access => {\r\n              this.props.redirectPageLogout(false)\r\n              this.props.setAccess(access)\r\n              localStorage.setItem('access', access)\r\n              resolve(access)\r\n            })\r\n        } else {\r\n          //Should NOT be showing btn in this condition\r\n            this.props.redirectPageLogout(false)\r\n            this.props.setAccess(response.authResponse.accessToken)\r\n            localStorage.setItem('access', response.authResponse.accessToken)\r\n            resolve(response.authResponse.accessToken)\r\n        }            \r\n      })\r\n    }\r\n    testAPI = () => {\r\n      return new Promise((res, rej) => {\r\n        window.FB.getLoginStatus(resp => {\r\n          console.log(resp)\r\n            window.FB.api('/me/accounts?fields=id', {access_token: resp.authResponse.accessToken}, (response) => {\r\n                console.log('RESPONSE',response)\r\n                if (response) {\r\n                  res()\r\n                } else {\r\n                  rej()\r\n                }\r\n            })\r\n        })\r\n      })\r\n    }\r\n\r\n    componentDidMount() {\r\n      //THIS SHOULD ONLY FIRE IS THERE IS A COOKIE\r\n      let cookie = document.cookie.match(new RegExp('(^| )' + 'token' + '=([^;]+)'));\r\n      if (cookie) {\r\n        this.loadFbApi()\r\n        .then(() => {\r\n          let fire = this.checkLoginState.bind(this)\r\n          fire()\r\n          .then(async (response) => {\r\n            let fire2 = this.statusChange.bind(this)\r\n            fire2(response)\r\n            .then(access => {\r\n            console.log('a',access)\r\n            if (access) {\r\n              this.testAPI()\r\n              .then(() => {\r\n                if(this.props.accessToken.length > 1) {\r\n                  console.log('here')\r\n                  this.props.redirectPage(true)\r\n                  console.log('redirect', this.props.login)\r\n                  setTimeout(() => {this.forceUpdate()}, 1000)\r\n                }\r\n              })\r\n              .catch(err => console.log('err with test call', err))\r\n            }\r\n          })\r\n          .catch(err => console.log('err with status change', err))\r\n        })\r\n        .catch(err => console.log('err with check login', err))\r\n      })\r\n     }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n      const {loggedIn} = this.props;\r\n      console.log('You are on fb page, loggedIn:', loggedIn)\r\n      let cookie = document.cookie.match(new RegExp('(^| )' + 'token' + '=([^;]+)'));\r\n      if (cookie) {\r\n        return (\r\n            <React.Fragment>\r\n              {loggedIn === true ? <Redirect to=\"/dashboard\" /> : null}\r\n                <div id=\"fb-root\">\r\n                  {/* <div onClick={this.handleClick}>FACEBOOK */}\r\n                  <div \r\n                  data-onlogin={() => console.log('data login')}\r\n                  className=\"fb-login-button\" \r\n                  data-width=\"300\" \r\n                  data-size=\"large\" \r\n                  data-button-type=\"continue_with\" \r\n                  data-layout=\"default\" \r\n                  data-auto-logout-link=\"false\" \r\n                  data-use-continue-as=\"false\"\r\n                  scope='read_insights,instagram_basic,pages_show_list,instagram_manage_comments,instagram_manage_insights,pages_read_engagement' \r\n                  >\r\n                  </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n      } else {\r\n        return (\r\n          <div>No cookie exists please login first</div>\r\n        )\r\n      }\r\n    }\r\n}\r\n\r\nexport default FbLogin;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        submitRedirectFb: false,\r\n        invalidLogin: false,\r\n        errorMsg: ' ',\r\n        hidden: true,\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = () => {\r\n        let {email, password, invalidLogin} = this.state;\r\n        if (email.length > 1 && password.length > 1) {\r\n            this.setState({hidden: false})\r\n            let obj = { 'email': email, 'password': password }\r\n            fetch(`https://multer-test123.herokuapp.com/signin`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(obj),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log('res',res)\r\n                if (res.status === 200) {\r\n                    this.setState({invalidLogin: false})\r\n                    return res.json()\r\n                } else {\r\n                    this.setState({invalidLogin: true})\r\n                    return res.json()\r\n                }\r\n            })\r\n            .then(async (data) => {\r\n                let error = data.Error;\r\n                console.log(data, this.state.invalidLogin, error)\r\n                if (this.state.invalidLogin === false && !error) {\r\n                    let name = \"token\";\r\n                    let now = new Date().getTime();\r\n                    let expires = now + (1000*60)\r\n                    //set cookie\r\n                    document.cookie = name + \"=\" + data.token + \";expires=\" + expires +\";path=/\"\r\n                    let useCook = document.cookie.match(new RegExp('(^| )' + 'token' + '=([^;]+)'));\r\n                    let useCooki = useCook[0].split('=')\r\n                    //CHANGE THE NUMBER HERE\r\n                    let useCookie = useCooki[1]\r\n                    console.log('bearer', useCookie)\r\n                    let formData = new FormData()\r\n                    \r\n                    let file1 = await fetch('https://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/Image_created_with_a_mobile_phone.png/1200px-Image_created_with_a_mobile_phone.png')\r\n                    let file2 = await file1.blob()\r\n                    let metadata = { type: 'image/jpeg' }\r\n                    let img = new File([file2], \"test.jpg\", metadata)\r\n                    formData.append('image', img)\r\n                    console.log('formData', formData, img)\r\n\r\n                    new Promise((res, rej) => {\r\n                        fetch('https://multer-test123.herokuapp.com/test', {\r\n                            method: 'POST',\r\n                            body: formData,\r\n                            headers: {\r\n                                'Authorization': `Bearer ${useCookie}`\r\n                            }\r\n                        })\r\n                        .then(async (response) => {\r\n                            console.log('here',response)\r\n                            if (response.status === 200) {\r\n                                res()\r\n                            } else {\r\n                                if (response.status === 403) {\r\n                                    data = await response.json()\r\n                                    this.setState({errorMsg: data.Error})\r\n                                }\r\n                                rej()\r\n                            }\r\n                        })\r\n                        .catch(err => console.log(err))\r\n                    })\r\n                    .then(() => {\r\n                        setTimeout(() => {\r\n                            this.setState({submitRedirectFb: true, hidden: true})\r\n                        }, 1000)\r\n                    })\r\n                    .catch(err => console.log(err))\r\n                } else {\r\n                    //set error message\r\n                    //delete cookie\r\n                    console.log('error')\r\n                    this.setState({errorMsg: data.Error})\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({errorMsg: 'Please ensure both fields are entered correctly.'})\r\n        }\r\n    }\r\n    render() {\r\n        const {hidden, email, password, submitRedirectFb, invalidLogin, errorMsg} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                {submitRedirectFb === true && invalidLogin === false ? <Redirect to=\"/fb\" /> : null}\r\n                <h1>Sign In</h1>\r\n                <span className=\"alert\">{errorMsg}</span>\r\n                <label>Email:</label>\r\n                <input \r\n                id=\"email\"\r\n                value={email} \r\n                onChange={(e) => this.handleChange(e)}\r\n                className=\"input\" />\r\n                <label>Password:</label>\r\n                <input \r\n                id=\"password\"\r\n                value={password} \r\n                onChange={(e) => this.handleChange(e)}\r\n                className=\"input\" />\r\n                <div className=\"btnContain\">\r\n                    <button \r\n                    onClick={this.handleSubmit}\r\n                    className=\"btn login\"\r\n                    >\r\n                        <div id={hidden ? \"hide\" : null} className=\"lds-defaultTwo left\">\r\n                        <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                        </div>\r\n                        <span id={hidden ? null : \"hide\"} className=\"loginTxt\">LOGIN</span>\r\n                    </button>\r\n                    <button className=\"btn signup\">\r\n                        <span className=\"signTxt\"> SIGNUP </span>\r\n                    </button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","export function getPhotoData () {\r\n    return new Promise((res, rej) => {\r\n        window.FB.api('/me/accounts?fields=id', function(response) {\r\n            let id = response.data[0].id;\r\n            window.FB.api(`/${id}?fields=instagram_business_account`, function(response){\r\n                let insta_id = response.instagram_business_account.id;\r\n                window.FB.api(`/${insta_id}/media`, function(response){\r\n                    //console.log(\"INDIVIDUAL POST IDS\", response.data)\r\n                    let photoArray = response.data;\r\n                    if (photoArray !== 'undefined') {\r\n                        res(photoArray)\r\n                    } else {\r\n                        rej(response)\r\n                        const error = document.querySelector(\".alert\");\r\n                        error.innerHTML = \"An error has occurred, please refresh the page.\"\r\n                    }\r\n                })\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nfunction help(str, num, prev, arr) {\r\n    if (str.length === 0) {\r\n        return arr.join('').split('#');\r\n    }\r\n    //On the hashtag\r\n    if(str[num] === '#') {\r\n        arr.push(str[num])\r\n        str.shift()\r\n        return help(str, num, true, arr)  \r\n        //Not on hashtag\r\n    } else if(str[num] !== '#') {\r\n        //Last was a hashtag so still within hashtag\r\n        if (prev === true) {\r\n            arr.push(str[num])\r\n            //Either within at end of hashtag or within bounds of hashtag\r\n            if (str[num+1] === ' ' | str[num+1 === '#']) {\r\n                str.shift()\r\n                return help(str, num, false,arr)  \r\n            } else {\r\n                str.shift()\r\n                return help(str, num, true,arr)  \r\n            }\r\n        //Not a hashtag and not within a hashtag\r\n        } else {\r\n            str.shift()\r\n            return help(str, num, false,arr)   \r\n        } \r\n    } \r\n}\r\n\r\nconst likeHashCall = (x, arr, hashes, like_count) => {\r\n    return new Promise((res, rej) => {\r\n        window.FB.api(`${x.id}?fields=like_count,caption,id`, function(response) {\r\n            like_count += response.like_count;\r\n            let inv_likes = response.like_count;\r\n            let captionArray = String(response.caption);\r\n            let toMap = Array.from(captionArray)\r\n            hashes = help(toMap, 0, false, arr) \r\n            if (hashes.length === 0) {\r\n                rej(response)\r\n            }\r\n            hashes.shift()\r\n            let obj = {\"id\": response.id, \"likes\": inv_likes, \"hashtags\": hashes} \r\n            if (hashes !== 'undefined') {\r\n                // console.log(\"hashes\", hashes)\r\n                res(obj)\r\n            } \r\n        })   \r\n    })\r\n}\r\n\r\nexport function dictCreate(photoArray, like_count, dict) {\r\n    return new Promise((resolve, rej) => {\r\n        photoArray.map(async (x, i) => {\r\n            let arr = new Array;\r\n            let hashes;\r\n            return await likeHashCall(x, arr, hashes, like_count)\r\n            .then(res => {\r\n            if (res === 'undefined') {\r\n                rej(x)\r\n            }\r\n            dict.push(res)\r\n            if (dict.length === photoArray.length) {\r\n                console.log('dict create resolved')\r\n                resolve(dict) \r\n            } \r\n            })    \r\n        })     \r\n    })\r\n}\r\n\r\nexport function avLikesDictionary(dict, av_likes, like_count, photoArray) {\r\n    return new Promise((resolve, reject) => {\r\n    av_likes = like_count / photoArray.length;\r\n    let hashNumUses = {}\r\n    dict.map((x, i) => {\r\n    //Creates hashtag score in dict - diff & divided diff\r\n    let diff = x.likes - av_likes;\r\n    x.difference = diff;\r\n    let score = diff / x.hashtags.length\r\n    x.hashtagScore = score\r\n        x.hashtags.map(x => {\r\n            if (!(x in hashNumUses)) {\r\n                hashNumUses = {\r\n                    ...hashNumUses,\r\n                    [x]: 1\r\n                }\r\n            } else {\r\n                hashNumUses[x] += 1\r\n            }\r\n        })\r\n        return dict;\r\n        })\r\n    const newDict = dict;\r\n    const object =  {newDict, hashNumUses}\r\n    resolve(object)\r\n    })\r\n}\r\n\r\nexport function scoreList(obj) {\r\n    return new Promise((res, rej) => {\r\n        const {hashNumUses, newDict} = obj;\r\n        let scoreList = {}\r\n        newDict.map(x => {\r\n            x.hashtags.map(y => {\r\n                if (!(y in scoreList)) {\r\n                    scoreList = {\r\n                        ...scoreList,\r\n                        [y]: x.hashtagScore\r\n                    }\r\n                } else {\r\n                    let oldScore = scoreList[y];\r\n                    let newScore = oldScore + x.hashtagScore;\r\n                    scoreList[y] = newScore;\r\n                }\r\n            })\r\n        })\r\n        res(scoreList)\r\n    })\r\n}","import React from 'react';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport {getPhotoData, dictCreate, avLikesDictionary, scoreList} from '../utils/hashtagHelpers'; \r\n\r\n\r\nclass Hashtags extends React.Component {\r\n    state = {\r\n        loggedOut: false,\r\n        promisesCompleted: false\r\n    }\r\n    componentDidMount() {\r\n        let like_count = 0;\r\n        let av_likes;\r\n        let dict = [ ];\r\n        getPhotoData()\r\n        .then(photoArray => {\r\n            console.log('res', photoArray)\r\n            dictCreate(photoArray, like_count, dict)\r\n            .then(diction => {\r\n                console.log('dictionary', diction)\r\n                avLikesDictionary(diction, av_likes, like_count, photoArray)\r\n                .then(obj => {\r\n                    console.log('obj', obj)\r\n                    scoreList(obj)\r\n                    .then(res => {\r\n                        if(res) {\r\n                            let list = Object.entries(res)\r\n                            list.sort((a,b) => {return b[1] - a[1]})\r\n                            this.setState({\r\n                                promisesCompleted: true,\r\n                                theList: list\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        const {promisesCompleted, theList} = this.state;\r\n        if (promisesCompleted) {\r\n            theList.map(x => {\r\n                console.log(x)\r\n            })\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <div class=\"hashtagTitle\">Hashtags</div> \r\n                <div class=\"hashtagDesc\">The hashtags that are getting you the most likes are...</div> \r\n                <div className=\"hashtagList\">\r\n                    {promisesCompleted &&\r\n                        <div className=\"innerHashtagList\">\r\n                            {theList.map((x, i)=> {\r\n                                return (\r\n                                    <div key={i} className=\"theListItem\">\r\n                                        <h1>#{x[0]}</h1>\r\n                                        <h2>{x[1]}</h2>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    }    \r\n                    {!promisesCompleted &&\r\n                        <div className=\"lds-defaultTwo\">\r\n                            <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                        </div>\r\n                    }\r\n                </div>               \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Hashtags;","\r\n\r\n export function checkLoginState () {\r\n    return new Promise((res, rej) => {\r\n       window.FB.getLoginStatus(function(response) {\r\n           res(response)\r\n       });\r\n     })\r\n   }\r\nexport function loadFbApi() {\r\n   return new Promise((res, rej) => {\r\n     if (!window.FB) { \r\n         (function(d, s, id) {\r\n           var js, fjs = d.getElementsByTagName(s)[0];\r\n           if (d.getElementById(id)) return;\r\n           js = d.createElement(s); js.id = id;\r\n           js.src = \"//connect.facebook.net/en_US/sdk.js\";\r\n           fjs.parentNode.insertBefore(js, fjs);\r\n         }(document, 'script', 'facebook-jssdk'));\r\n         window.fbAsyncInit = function() {\r\n             let FB_APP_ID = 1796391010517069;\r\n             window.FB.init({\r\n                 appId      : FB_APP_ID,\r\n                 cookie     : true, \r\n                 // the session\r\n                 xfbml      : true, \r\n                 version    : 'v9.0' \r\n             })\r\n             window.FB.AppEvents.logPageView();\r\n             console.log('fired')\r\n             res()\r\n       } \r\n     } else {\r\n         res()\r\n     }\r\n     })\r\n   }\r\nexport function login() {\r\n     return new Promise((resolve2, rej) => {\r\n       window.FB.login(function(res) {\r\n         console.log('logged in', res.authResponse.accessToken)\r\n         let access = res.authResponse.accessToken;\r\n         resolve2(access)\r\n       })\r\n     })\r\n   }\r\nexport function statusChange(response) {\r\n     return new Promise(async (resolve, rej) => {\r\n       if (response.status === 'unknown'||response.status === 'not_authorized') {  \r\n           this.login()\r\n           .then(access => {\r\n             this.props.redirectPageLogout(false)\r\n             this.props.setAccess(access)\r\n             localStorage.setItem('access', access)\r\n             resolve(access)\r\n           })\r\n       } else {\r\n         //Should NOT be showing btn in this condition\r\n           this.props.redirectPageLogout(false)\r\n           this.props.setAccess(response.authResponse.accessToken)\r\n           localStorage.setItem('access', response.authResponse.accessToken)\r\n           resolve(response.authResponse.accessToken)\r\n       }            \r\n     })\r\n   }\r\nexport function testAPI() {\r\n     return new Promise((res, rej) => {\r\n       window.FB.getLoginStatus(resp => {\r\n         console.log(resp)\r\n           window.FB.api('/me/accounts?fields=id', {access_token: resp.authResponse.accessToken}, (response) => {\r\n               console.log('RESPONSE',response)\r\n               if (response) {\r\n                 res()\r\n               } else {\r\n                 rej()\r\n               }\r\n           })\r\n       })\r\n     })\r\n   }\r\n","import React from 'react';\r\nimport Hashtags from './hashtags';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport {loadFbApi, testAPI, checkLoginState} from '../utils/helpers'; \r\n\r\n\r\n\r\nclass Logout extends React.Component {\r\n    state = {\r\n        loggedOut: false\r\n    }\r\n    logout = async () => {\r\n        checkLoginState()\r\n        .then(resp => {\r\n            if (resp) {\r\n                window.FB.logout(res => {console.log('loggedout', res)})\r\n            }\r\n        })\r\n        //DESTROY COOKIE AND ACCESS IN LS??\r\n        let name = \"token\"; let expires =  \"Thu, 01 Jan 1970 00:00:01 GMT\";\r\n        let cookie = document.cookie.match(new RegExp('(^| )' + 'token' + '=([^;]+)'));\r\n        document.cookie = name + \"=\" + cookie[0] + \";expires=\" + expires + \";path=/\"\r\n        localStorage.removeItem('access');\r\n        this.props.redirectPage(false)\r\n        setTimeout(() => {\r\n            this.props.redirectPageLogout(true)\r\n        }, 2000)\r\n    }\r\n    componentDidMount() {\r\n        // Reloaded dashboard as cookie exists but no window.FB\r\n        if (!window.FB) {\r\n            loadFbApi()\r\n            .then(() => checkLoginState())\r\n            .then(resp => {\r\n                if (resp) {\r\n                    console.log('You are logged in to fb')\r\n                    this.forceUpdate()\r\n                } else {\r\n                    new Error('You are not logged in to fb')\r\n                }\r\n            })\r\n            .catch(err => console.log('Component did mount', err))\r\n        }\r\n    }\r\n    render() {\r\n    //   const {loggedOut} = this.state;\r\n      const {accessToken, loggedOut} = this.props;\r\n      console.log('at new', this.props, this.state)\r\n        return (\r\n            <React.Fragment>\r\n              {loggedOut === true ? <Redirect to=\"/\" /> : null}\r\n                <div className=\"btnContainLog\">\r\n                <button\r\n                className=\"btn\"\r\n                onClick={this.logout}\r\n                >Logout</button>\r\n                </div>\r\n\r\n                <div className=\"dash\">\r\n                    {window.FB &&\r\n                        <Hashtags />\r\n                    }\r\n                </div>\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logout;","import './App.css';\r\nimport './components/login.css';\r\nimport React from 'react';\r\nimport {HashRouter as Router, Switch, Route, Link, Redirect} from 'react-router-dom';\r\nimport FbLogin from './components/fbLogin';\r\nimport Login from './components/login';\r\nimport Dashboard from './components/dashboard';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router basename=\"/home\">\r\n        <Switch>\r\n          <Route path=\"/\">\r\n          <div>Hello</div>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}